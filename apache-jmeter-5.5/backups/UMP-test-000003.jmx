<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="NUM" enabled="false">
        <stringProp name="CounterConfig.start">0001</stringProp>
        <stringProp name="CounterConfig.end"></stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name"></stringProp>
        <stringProp name="CounterConfig.format">0000</stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
      </CounterConfig>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Server_Name" elementType="Argument">
            <stringProp name="Argument.name">Server_Name</stringProp>
            <stringProp name="Argument.value">betaapp.ngdialogue.no</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Path1" elementType="Argument">
            <stringProp name="Argument.name">Path1</stringProp>
            <stringProp name="Argument.value">v1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Language" elementType="Argument">
            <stringProp name="Argument.name">Language</stringProp>
            <stringProp name="Argument.value">en-US,en;q=0.8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Argument">
            <stringProp name="Argument.name">User-Agent</stringProp>
            <stringProp name="Argument.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="UserName" elementType="Argument">
            <stringProp name="Argument.name">UserName</stringProp>
            <stringProp name="Argument.value">demokunde@lifevision.no</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Password" elementType="Argument">
            <stringProp name="Argument.name">Password</stringProp>
            <stringProp name="Argument.value">9aUCU3z5P7p2cYgf</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="InputtedDaysNegative" elementType="Argument">
            <stringProp name="Argument.name">InputtedDaysNegative</stringProp>
            <stringProp name="Argument.value">-30</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">subtract the quantity of days that passed since testing date</stringProp>
          </elementProp>
          <elementProp name="InputtedDaysPositive" elementType="Argument">
            <stringProp name="Argument.name">InputtedDaysPositive</stringProp>
            <stringProp name="Argument.value">40</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">add the quantity of days that passed since testing date</stringProp>
          </elementProp>
          <elementProp name="maxValueDate" elementType="Argument">
            <stringProp name="Argument.name">maxValueDate</stringProp>
            <stringProp name="Argument.value">&quot;2020-11-23&quot;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">testing date</stringProp>
          </elementProp>
          <elementProp name="maxValueForNPS" elementType="Argument">
            <stringProp name="Argument.name">maxValueForNPS</stringProp>
            <stringProp name="Argument.value">90</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="queries" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="API Login" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Server_Name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${Path1}/SignIn?Username=demokunde%40lifevision.no&amp;Password=5P7pvgaU%25%26%2ACU%23%245Ygf</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request_1 Result" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;objectName&quot;: &quot;nps_data&quot;,&#xd;
    &quot;filter&quot;: [],&#xd;
    &quot;properties&quot;: [&#xd;
        {&#xd;
            &quot;type&quot;: &quot;Min&quot;,&#xd;
            &quot;path&quot;: &quot;updatedDate&quot;,&#xd;
            &quot;name&quot;: &quot;updatedDate&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Server_Name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${Path1}/DataSource/236/queries/result/1?start=0</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">NPS first answer date</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1568362755">[{&quot;updatedDate&quot;:&quot;2020-01-01&quot;}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Request_1 Result error</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request_2 Result" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&#xd;
    &quot;objectName&quot;: &quot;nps_score&quot;,&#xd;
    &quot;filter&quot;: [&#xd;
        {&#xd;
            &quot;filterType&quot;: &quot;questionId&quot;,&#xd;
            &quot;path&quot;: &quot;questionId&quot;,&#xd;
            &quot;operations&quot;: [&#xd;
                {&#xd;
                    &quot;predicate&quot;: &quot;In&quot;,&#xd;
                    &quot;value&quot;: [&#xd;
                        1,&#xd;
                        2,&#xd;
                        3,&#xd;
                        4,&#xd;
                        5,&#xd;
                        6,&#xd;
                        7,&#xd;
                        8,&#xd;
                        17,&#xd;
                        22,&#xd;
                        36&#xd;
                    ]&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;order&quot;: [&#xd;
        {&#xd;
            &quot;SortName&quot;: &quot;questionId&quot;,&#xd;
            &quot;SortDirection&quot;: &quot;Asc&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Server_Name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${Path1}/DataSource/237/queries/result/11?start=0</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">&quot;objectName&quot;:&quot;nps_score&quot;</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1082032735">[{&quot;questionId&quot;:1,&quot;promoters&quot;:488.0,&quot;detractors&quot;:247.0,&quot;passives&quot;:335.0,&quot;average&quot;:7.4598},{&quot;questionId&quot;:2,&quot;promoters&quot;:430.0,&quot;detractors&quot;:325.0,&quot;passives&quot;:333.0,&quot;average&quot;:7.0892},{&quot;questionId&quot;:3,&quot;promoters&quot;:177.0,&quot;detractors&quot;:150.0,&quot;passives&quot;:150.0,&quot;average&quot;:6.9895},{&quot;questionId&quot;:4,&quot;promoters&quot;:382.0,&quot;detractors&quot;:236.0,&quot;passives&quot;:264.0,&quot;average&quot;:7.3741},{&quot;questionId&quot;:5,&quot;promoters&quot;:279.0,&quot;detractors&quot;:191.0,&quot;passives&quot;:181.0,&quot;average&quot;:7.1367},{&quot;questionId&quot;:6,&quot;promoters&quot;:291.0,&quot;detractors&quot;:227.0,&quot;passives&quot;:203.0,&quot;average&quot;:7.0361},{&quot;questionId&quot;:7,&quot;promoters&quot;:278.0,&quot;detractors&quot;:153.0,&quot;passives&quot;:162.0,&quot;average&quot;:7.3963},{&quot;questionId&quot;:8,&quot;promoters&quot;:198.0,&quot;detractors&quot;:135.0,&quot;passives&quot;:106.0,&quot;average&quot;:7.0934}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">&quot;objectName&quot;:&quot;nps_score&quot; error</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request_1 Quantity" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Server_Name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${Path1}/DataSource/237/objects/nps_questions/data?start=1&amp;count=1</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">NPS Global score</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="1162717905">[{&quot;id&quot;:1,&quot;name&quot;:&quot;Default&quot;,&quot;shortDescription&quot;:&quot;global_score&quot;,&quot;description&quot;:&quot;Global score&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:2,&quot;name&quot;:&quot;facility&quot;,&quot;shortDescription&quot;:&quot;Club Facility&quot;,&quot;description&quot;:&quot;123456789012345&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:3,&quot;name&quot;:&quot;food&quot;,&quot;shortDescription&quot;:&quot;Food short&quot;,&quot;description&quot;:&quot;Food Selection&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:4,&quot;name&quot;:&quot;staff&quot;,&quot;shortDescription&quot;:&quot;staff shortName&quot;,&quot;description&quot;:&quot;Staff&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:5,&quot;name&quot;:&quot;availability&quot;,&quot;shortDescription&quot;:&quot;&quot;,&quot;description&quot;:&quot;Offers Availability&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:6,&quot;name&quot;:&quot;clean&quot;,&quot;shortDescription&quot;:&quot;clean&quot;,&quot;description&quot;:&quot;Cleanness&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:7,&quot;name&quot;:&quot;information&quot;,&quot;shortDescription&quot;:&quot;Information_Accessib&quot;,&quot;description&quot;:&quot;Information Accessibility&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:8,&quot;name&quot;:&quot;online_facilities&quot;,&quot;shortDescription&quot;:&quot;&quot;,&quot;description&quot;:&quot;Online Facilities&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:15,&quot;name&quot;:&quot;who_is_your_favorite_pt&quot;,&quot;shortDescription&quot;:&quot;Favorite pt&quot;,&quot;description&quot;:&quot;Who is your favorite PT?&quot;,&quot;visible&quot;:1,&quot;type&quot;:1,&quot;data&quot;:[&quot;who_is_your_favorite_pt&quot;]},{&quot;id&quot;:17,&quot;name&quot;:&quot;maxlengthnamehere20s&quot;,&quot;shortDescription&quot;:&quot;maxLengthNameHere20s&quot;,&quot;description&quot;:&quot;very Long Name to test ui behavior with long names. There is limit for short description up to 20 symbols.&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:21,&quot;name&quot;:&quot;question&quot;,&quot;shortDescription&quot;:&quot;question&quot;,&quot;description&quot;:&quot;question caption&quot;,&quot;visible&quot;:1,&quot;type&quot;:1,&quot;data&quot;:null},{&quot;id&quot;:22,&quot;name&quot;:&quot;short&quot;,&quot;shortDescription&quot;:&quot;short&quot;,&quot;description&quot;:&quot;QuestionsNpsCard take off if one of lines has no data&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:25,&quot;name&quot;:&quot;explanation__780_13&quot;,&quot;shortDescription&quot;:&quot;explanation__780_13&quot;,&quot;description&quot;:&quot;test_explanation__780_13&quot;,&quot;visible&quot;:1,&quot;type&quot;:1,&quot;data&quot;:null},{&quot;id&quot;:26,&quot;name&quot;:&quot;texplanation__780_13&quot;,&quot;shortDescription&quot;:&quot;texplanation__780_13&quot;,&quot;description&quot;:&quot;explanation__780_13explanation__780_13&quot;,&quot;visible&quot;:1,&quot;type&quot;:1,&quot;data&quot;:[&quot;texplanation__780_13&quot;]},{&quot;id&quot;:28,&quot;name&quot;:&quot;some&quot;,&quot;shortDescription&quot;:&quot;some&quot;,&quot;description&quot;:&quot;some question&quot;,&quot;visible&quot;:1,&quot;type&quot;:1,&quot;data&quot;:[&quot;some&quot;]},{&quot;id&quot;:31,&quot;name&quot;:&quot;lvd3307&quot;,&quot;shortDescription&quot;:&quot;LVD-3307&quot;,&quot;description&quot;:&quot;LVD-3307&quot;,&quot;visible&quot;:0,&quot;type&quot;:0,&quot;data&quot;:null},{&quot;id&quot;:33,&quot;name&quot;:&quot;lvd3804&quot;,&quot;shortDescription&quot;:&quot;LVD-3804&quot;,&quot;description&quot;:&quot;LVD-3804&quot;,&quot;visible&quot;:0,&quot;type&quot;:1,&quot;data&quot;:[&quot;lvd3804&quot;]},{&quot;id&quot;:36,&quot;name&quot;:&quot;test_today&quot;,&quot;shortDescription&quot;:&quot;test today&quot;,&quot;description&quot;:&quot;test today&quot;,&quot;visible&quot;:1,&quot;type&quot;:0,&quot;data&quot;:null}]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request_3 Result" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;objectName&quot;: &quot;nps_statistic_8&quot;,&#xd;
  &quot;properties&quot;: [&#xd;
    {&#xd;
      &quot;path&quot;: &quot;isPromoter&quot;,&#xd;
      &quot;type&quot;: &quot;Sum&quot;,&#xd;
      &quot;name&quot;: &quot;promoters&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;path&quot;: &quot;isDetractor&quot;,&#xd;
      &quot;type&quot;: &quot;Sum&quot;,&#xd;
      &quot;name&quot;: &quot;detractors&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;path&quot;: &quot;isPassive&quot;,&#xd;
      &quot;type&quot;: &quot;Sum&quot;,&#xd;
      &quot;name&quot;: &quot;passives&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;average&quot;,&#xd;
      &quot;path&quot;: &quot;rate&quot;,&#xd;
      &quot;type&quot;: &quot;Average&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;path&quot;: &quot;updatedDate&quot;,&#xd;
      &quot;type&quot;: &quot;YearMonth&quot;,&#xd;
      &quot;name&quot;: &quot;dateGroupKey&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;filter&quot;: [&#xd;
    {&#xd;
      &quot;filterType&quot;: &quot;&quot;,&#xd;
      &quot;path&quot;: &quot;updatedDate&quot;,&#xd;
      &quot;operations&quot;: [&#xd;
        {&#xd;
          &quot;predicate&quot;: &quot;Less&quot;,&#xd;
          &quot;value&quot;: &quot;Date&quot;,&#xd;
          &quot;maxValue&quot;: &quot;2024-05-11&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;predicate&quot;: &quot;GreaterOrEquals&quot;,&#xd;
          &quot;value&quot;: &quot;Date&quot;,&#xd;
          &quot;maxValue&quot;: &quot;2020-01-08&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;filterType&quot;: &quot;queryInQueryFilter&quot;,&#xd;
      &quot;path&quot;: &quot;userId&quot;,&#xd;
      &quot;operations&quot;: [&#xd;
        {&#xd;
          &quot;predicate&quot;: &quot;Query&quot;,&#xd;
          &quot;value&quot;: 236,&#xd;
          &quot;maxValue&quot;: {&#xd;
            &quot;objectName&quot;: &quot;members&quot;,&#xd;
            &quot;filter&quot;: [&#xd;
              {&#xd;
                &quot;path&quot;: &quot;__tags.tag&quot;,&#xd;
                &quot;operations&quot;: [&#xd;
                  {&#xd;
                    &quot;predicate&quot;: &quot;In&quot;,&#xd;
                    &quot;value&quot;: [&#xd;
                      &quot;LDV-3291&quot;,&#xd;
                      &quot;LVD-3030&quot;,&#xd;
                      &quot;LVD-3300&quot;,&#xd;
                      &quot;TestImport&quot;,&#xd;
                      &quot;api test&quot;,&#xd;
                      &quot;api test 2&quot;,&#xd;
                      &quot;invalid&quot;,&#xd;
                      &quot;ira&quot;,&#xd;
                      &quot;some veryyy looonnnggg tag name to use in filer&quot;,&#xd;
                      &quot;some_long_tag_name_to_use&quot;,&#xd;
                      &quot;test 3291&quot;,&#xd;
                      &quot;test5&quot;,&#xd;
                      &quot;to delete&quot;,&#xd;
                      &quot;to delete 2&quot;&#xd;
                    ]&#xd;
                  }&#xd;
                ]&#xd;
              }&#xd;
            ]&#xd;
          }&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  ],&#xd;
  &quot;order&quot;: [&#xd;
    {&#xd;
      &quot;SortName&quot;: &quot;dateGroupKey&quot;,&#xd;
      &quot;SortDirection&quot;: &quot;Asc&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;groupBy&quot;: [&#xd;
    &quot;dateGroupKey&quot;&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Server_Name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${Path1}/DataSource/237/queries/result/1585?start=0</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">nps_statistic_8</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request_4 Result" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;objectName&quot;: &quot;nps_score&quot;,&#xd;
  &quot;filter&quot;: [&#xd;
    {&#xd;
      &quot;filterType&quot;: &quot;questionId&quot;,&#xd;
      &quot;path&quot;: &quot;questionId&quot;,&#xd;
      &quot;operations&quot;: [&#xd;
        {&#xd;
          &quot;predicate&quot;: &quot;In&quot;,&#xd;
          &quot;value&quot;: [&#xd;
            1,&#xd;
            2,&#xd;
            3,&#xd;
            4,&#xd;
            5,&#xd;
            6,&#xd;
            7,&#xd;
            8,&#xd;
            17,&#xd;
            22,&#xd;
            36,&#xd;
            37&#xd;
          ]&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  ],&#xd;
  &quot;order&quot;: [&#xd;
    {&#xd;
      &quot;SortName&quot;: &quot;questionId&quot;,&#xd;
      &quot;SortDirection&quot;: &quot;Asc&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Server_Name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${Path1}/DataSource/237/queries/result/12?start=0</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">NPS Score
</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request_5 Result" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
{&#xd;
    &quot;objectName&quot;: &quot;nps_statistic_1&quot;,&#xd;
    &quot;properties&quot;: [&#xd;
        {&#xd;
            &quot;path&quot;: &quot;isPromoter&quot;,&#xd;
            &quot;type&quot;: &quot;Sum&quot;,&#xd;
            &quot;name&quot;: &quot;promoters&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;path&quot;: &quot;isDetractor&quot;,&#xd;
            &quot;type&quot;: &quot;Sum&quot;,&#xd;
            &quot;name&quot;: &quot;detractors&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;path&quot;: &quot;isPassive&quot;,&#xd;
            &quot;type&quot;: &quot;Sum&quot;,&#xd;
            &quot;name&quot;: &quot;passives&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;name&quot;: &quot;average&quot;,&#xd;
            &quot;path&quot;: &quot;rate&quot;,&#xd;
            &quot;type&quot;: &quot;Average&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;path&quot;: &quot;updatedDate&quot;,&#xd;
            &quot;type&quot;: &quot;Year&quot;,&#xd;
            &quot;name&quot;: &quot;dateGroupKey&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;filter&quot;: [&#xd;
        {&#xd;
            &quot;filterType&quot;: &quot;&quot;,&#xd;
            &quot;path&quot;: &quot;updatedDate&quot;,&#xd;
            &quot;operations&quot;: [&#xd;
                {&#xd;
                    &quot;predicate&quot;: &quot;Less&quot;,&#xd;
                    &quot;value&quot;: &quot;Date&quot;,&#xd;
                    &quot;maxValue&quot;: &quot;2021-01-02&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;predicate&quot;: &quot;GreaterOrEquals&quot;,&#xd;
                    &quot;value&quot;: &quot;Date&quot;,&#xd;
                    &quot;maxValue&quot;: &quot;2019-01-01&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;order&quot;: [&#xd;
        {&#xd;
            &quot;SortName&quot;: &quot;dateGroupKey&quot;,&#xd;
            &quot;SortDirection&quot;: &quot;Asc&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;groupBy&quot;: [&#xd;
        &quot;dateGroupKey&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Server_Name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${Path1}/DataSource/237/queries/result/732?start=0</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">nps_statistic_1</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-440493766">[
    {
        &quot;promoters&quot;: 522.0,
        &quot;detractors&quot;: 217.0,
        &quot;passives&quot;: 354.0,
        &quot;average&quot;: 7.6221,
        &quot;dateGroupKey&quot;: 2020
    },
    {
        &quot;promoters&quot;: 0.0,
        &quot;detractors&quot;: 6.0,
        &quot;passives&quot;: 1.0,
        &quot;average&quot;: 5.1429,
        &quot;dateGroupKey&quot;: 2021
    }
]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Request_6 Result" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;objectName&quot;: &quot;nps_statistic_6&quot;,&#xd;
    &quot;properties&quot;: [&#xd;
        {&#xd;
            &quot;path&quot;: &quot;isPromoter&quot;,&#xd;
            &quot;type&quot;: &quot;Sum&quot;,&#xd;
            &quot;name&quot;: &quot;promoters&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;path&quot;: &quot;isDetractor&quot;,&#xd;
            &quot;type&quot;: &quot;Sum&quot;,&#xd;
            &quot;name&quot;: &quot;detractors&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;path&quot;: &quot;isPassive&quot;,&#xd;
            &quot;type&quot;: &quot;Sum&quot;,&#xd;
            &quot;name&quot;: &quot;passives&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;name&quot;: &quot;average&quot;,&#xd;
            &quot;path&quot;: &quot;rate&quot;,&#xd;
            &quot;type&quot;: &quot;Average&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;path&quot;: &quot;updatedDate&quot;,&#xd;
            &quot;type&quot;: &quot;YearMonth&quot;,&#xd;
            &quot;name&quot;: &quot;dateGroupKey&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;filter&quot;: [&#xd;
        {&#xd;
            &quot;path&quot;: &quot;trainer&quot;,&#xd;
            &quot;filterType&quot;: &quot;npsAutoDic_&quot;,&#xd;
            &quot;operations&quot;: [&#xd;
                {&#xd;
                    &quot;predicate&quot;: &quot;In&quot;,&#xd;
                    &quot;value&quot;: [&#xd;
                        &quot;Emil Jensen&quot;,&#xd;
                        &quot;Sophia Olsen&quot;&#xd;
                    ]&#xd;
                }&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;path&quot;: &quot;product&quot;,&#xd;
            &quot;filterType&quot;: &quot;npsAutoDic_&quot;,&#xd;
            &quot;operations&quot;: [&#xd;
                {&#xd;
                    &quot;predicate&quot;: &quot;In&quot;,&#xd;
                    &quot;value&quot;: [&#xd;
                        &quot;Group training&quot;,&#xd;
                        &quot;Pool&quot;,&#xd;
                        &quot;Spa and wellness&quot;&#xd;
                    ]&#xd;
                }&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;path&quot;: &quot;updatedDate&quot;,&#xd;
            &quot;filterType&quot;: &quot;dateFilter_&quot;,&#xd;
            &quot;filterKey&quot;: &quot;dateFilter_2&quot;,&#xd;
            &quot;operations&quot;: [&#xd;
                {&#xd;
                    &quot;predicate&quot;: &quot;GreaterOrEquals&quot;,&#xd;
                    &quot;value&quot;: &quot;Date&quot;,&#xd;
                    &quot;useOr&quot;: false,&#xd;
                    &quot;maxValue&quot;: &quot;2020-01-01&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;predicate&quot;: &quot;LessOrEquals&quot;,&#xd;
                    &quot;value&quot;: &quot;Date&quot;,&#xd;
                    &quot;maxValue&quot;: &quot;2021-01-02&quot;&#xd;
                }&#xd;
            ]&#xd;
        },&#xd;
        {&#xd;
            &quot;filterType&quot;: &quot;&quot;,&#xd;
            &quot;path&quot;: &quot;updatedDate&quot;,&#xd;
            &quot;operations&quot;: [&#xd;
                {&#xd;
                    &quot;predicate&quot;: &quot;Less&quot;,&#xd;
                    &quot;value&quot;: &quot;Date&quot;,&#xd;
                    &quot;maxValue&quot;: &quot;2021-01-02&quot;&#xd;
                },&#xd;
                {&#xd;
                    &quot;predicate&quot;: &quot;GreaterOrEquals&quot;,&#xd;
                    &quot;value&quot;: &quot;Date&quot;,&#xd;
                    &quot;maxValue&quot;: &quot;2020-01-01&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ],&#xd;
    &quot;order&quot;: [&#xd;
        {&#xd;
            &quot;SortName&quot;: &quot;dateGroupKey&quot;,&#xd;
            &quot;SortDirection&quot;: &quot;Asc&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;groupBy&quot;: [&#xd;
        &quot;dateGroupKey&quot;&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${Server_Name}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${Path1}/DataSource/237/queries/result/367?start=0</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">nps_statistic_6</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="55279753">[
    {
        &quot;promoters&quot;: 0.0,
        &quot;detractors&quot;: 1.0,
        &quot;passives&quot;: 0.0,
        &quot;average&quot;: 5.0000,
        &quot;dateGroupKey&quot;: 202002
    },
    {
        &quot;promoters&quot;: 1.0,
        &quot;detractors&quot;: 0.0,
        &quot;passives&quot;: 0.0,
        &quot;average&quot;: 10.0000,
        &quot;dateGroupKey&quot;: 202003
    },
    {
        &quot;promoters&quot;: 0.0,
        &quot;detractors&quot;: 0.0,
        &quot;passives&quot;: 1.0,
        &quot;average&quot;: 8.0000,
        &quot;dateGroupKey&quot;: 202004
    },
    {
        &quot;promoters&quot;: 2.0,
        &quot;detractors&quot;: 0.0,
        &quot;passives&quot;: 1.0,
        &quot;average&quot;: 9.0000,
        &quot;dateGroupKey&quot;: 202005
    },
    {
        &quot;promoters&quot;: 1.0,
        &quot;detractors&quot;: 0.0,
        &quot;passives&quot;: 0.0,
        &quot;average&quot;: 10.0000,
        &quot;dateGroupKey&quot;: 202007
    },
    {
        &quot;promoters&quot;: 1.0,
        &quot;detractors&quot;: 0.0,
        &quot;passives&quot;: 0.0,
        &quot;average&quot;: 10.0000,
        &quot;dateGroupKey&quot;: 202008
    },
    {
        &quot;promoters&quot;: 0.0,
        &quot;detractors&quot;: 0.0,
        &quot;passives&quot;: 1.0,
        &quot;average&quot;: 7.0000,
        &quot;dateGroupKey&quot;: 202010
    },
    {
        &quot;promoters&quot;: 1.0,
        &quot;detractors&quot;: 3.0,
        &quot;passives&quot;: 0.0,
        &quot;average&quot;: 4.2500,
        &quot;dateGroupKey&quot;: 202012
    }
]</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">true</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">true</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">C:\Users\fraul\Desktop\logs</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
